#!/bin/bash --login

# usage:
#   ./runtest
# example:
#  ./runtest

# This executable file should load minimum environment and start testing of
# the project. No argument are provided because it can be tricky to pass the
# arguments to the PBS job. The easiest way is to create a pbs job, which loads
# the environment and start the testing.
# This script can be run on the compute node to not influence other users 
# on the frontend node.

# For this script, Jenkins (or some other CI server will wait)
# it is recommended to use python wrapper to wait for the job to end:
#   python wait_for.py <JOB-ID>


ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
NOW=$(date "+%Y-%m-%d_%H-%M-%S")

echo "#############################################"
echo "[$NOW] adding job to the queue"
echo "#############################################"



# Example for the HPC charon.nti.tul.cz
# ------------------------------------------------------------------------------
. /etc/profile
module purge
module load metabase
module load python-3.6.2-gcc
module load python36-modules-gcc
module list


bash $ROOT/bin/pbs/flow123d.pbs

# # add new job to the queue
# output=$(qsub \
#     -N "bench-flow-$NOW" \
#     -l select=1:ncpus=8:mem=8gb \
#     -l place=excl \
#     -l walltime=1:59:59 \
#     -q charon \
#     -o $ROOT/logs/bench-flow-$NOW.txt \
#     $ROOT/bin/pbs/flow123d.pbs)
# 
# # wait for the job to finish
# python3 $ROOT/ci-hpc/wait_for.py "$output" --timeout 7200 --check-period 30 2>&1 | tee tests-$NOW.log

# exit $?
# ------------------------------------------------------------------------------
